---
#
#       tasks for server_install role
#

#
#        Run some basic sanity checks such as make sure we have unique VM Names, Ids and correct range
#

- name: Validate that instance indentifiers are unique
  assert:
    that: >
      topology.instances | map (attribute='vm_id') | list | count
      ==
      topology.instances | map (attribute='vm_id') | list | unique | count
    msg: "Error: duplicate vm_id"
  delegate_to: 127.0.0.1
  run_once: true

- name: Validate that instance names are unique
  assert:
    that: >
      topology.instances | map (attribute='name') | list | count
      ==
      topology.instances | map (attribute='name') | list | unique | count
    msg: "Error: duplicate instance name"
  delegate_to: 127.0.0.1
  run_once: true
    
- name: Validate that vm_id is in [0..99] range
  assert:
    that:
      - topology.instances | map (attribute='vm_id') | list | max < 100
      - topology.instances | map (attribute='name') | list | min  >= 0
    msg: "error: vm_id range is [0..99]"
  delegate_to: 127.0.0.1
  run_once: true
      
# Package installation and daemon start

- name: Install core repos and packages on hosts
  yum:
    name: "{{ packages }}"
  vars:
    packages:
      - epel-release
      - https://www.rdoproject.org/repos/rdo-release.rpm

- name: Install packages (yum)
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - libguestfs
    - libguestfs-tools
    - libguestfs-tools
    - virt-install
    - libvirt
    - libvirt-python
    - net-tools
    - tcpdump
    - telnet
    - python-pip
    - sshpass
    - bridge-utils
    
- name: Install KVM package (yum)
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - qemu-kvm

- name: Install python lxml module for ansible virt_net (pip)
  pip:
    name: lxml

#  iptables is impacting VXLAN forwarding   
#  However it is required for NAT forwarding 
#  Keeping this in comment in case we need it again
#
#
- name: Stop iptables
  systemd:
    state: stopped
    name: firewalld
    enabled: False
      
#      iptables -I INPUT -j ACCEPT
#      iptables -I FORWARD -j ACCEPT
#      /sbin/iptables-save
#      
#    
#
#
#

- name: Start libvirt
  systemd:
    state: restarted
    name: libvirtd
    enabled: True
    
#
#
# Enable Nested virtualisation
# 
#
- name: Copy kvm-nested.conf (enable nested virtualisation + disable apicv)
  copy:
    src: 'host_vars/kvm-nested.conf'
    dest: '/etc/modprobe.d/kvm-nested.conf'

- name: Remove kvm_intel module
  modprobe:
    name: kvm_intel
    state: absent

- name: Restart kvm_intel module
  modprobe:
    name: kvm_intel
    state: present
  
- name: Verify that nested virtualisation is activated
  shell: cat /sys/module/kvm_intel/parameters/nested
  register: nested

- debug: 
    msg: "Activation of nested virtualisation: {{nested.stdout}}"

# Copy vQFX RE and PFE Images to "/tmp"   
- name: Copy {{ vqfx-re_image_name }} to local server 
  get_url:
    url: "{{ vqfx_download_url }}/{{ vqfxre_image_name }}"
    dest: /tmp/{{ vqfxre_image_name }}
- name: Copy {{ vqfx-pfe_image_name }} to local server 
  get_url:
    url: "{{ vqfx_download_url }}/{{ vqfxpfe_image_name }}"
    dest: /tmp/{{ vqfxpfe_image_name }}

- lineinfile: 
    dest: "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"
    state: present
    regexp: '^MTU'
    line: 'MTU=9000'
